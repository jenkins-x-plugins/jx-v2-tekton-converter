apiVersion: tekton.dev/v1beta1
kind: PipelineRun
metadata:
  labels:
    jenkins.io/pipelineType: build
  name: jx-go-plugin-release
spec:
  pipelineSpec:
    params:
    - description: the unique build number
      name: BUILD_ID
      type: string
    - description: the name of the job which is the trigger context name
      name: JOB_NAME
      type: string
    - description: the specification of the job
      name: JOB_SPEC
      type: string
    - description: 'the kind of job: postsubmit or presubmit'
      name: JOB_TYPE
      type: string
    - default: master
      description: the base git reference of the pull request
      name: PULL_BASE_REF
      type: string
    - description: the git sha of the base of the pull request
      name: PULL_BASE_SHA
      type: string
    - default: ""
      description: git pull request number
      name: PULL_NUMBER
      type: string
    - default: ""
      description: git pull request ref in the form 'refs/pull/$PULL_NUMBER/head'
      name: PULL_PULL_REF
      type: string
    - default: master
      description: git revision to checkout (branch, tag, sha, ref…)
      name: PULL_PULL_SHA
      type: string
    - description: git pull reference strings of base and latest in the form 'master:$PULL_BASE_SHA,$PULL_NUMBER:$PULL_PULL_SHA:refs/pull/$PULL_NUMBER/head'
      name: PULL_REFS
      type: string
    - description: git repository name
      name: REPO_NAME
      type: string
    - description: git repository owner (user or organisation)
      name: REPO_OWNER
      type: string
    - description: git url to clone
      name: REPO_URL
      type: string
    tasks:
    - name: chart
      params:
      - name: BUILD_ID
        value: $(params.BUILD_ID)
      - name: JOB_NAME
        value: $(params.JOB_NAME)
      - name: JOB_SPEC
        value: $(params.JOB_SPEC)
      - name: JOB_TYPE
        value: $(params.JOB_TYPE)
      - name: PULL_BASE_REF
        value: $(params.PULL_BASE_REF)
      - name: PULL_BASE_SHA
        value: $(params.PULL_BASE_SHA)
      - name: PULL_NUMBER
        value: $(params.PULL_NUMBER)
      - name: PULL_PULL_REF
        value: $(params.PULL_PULL_REF)
      - name: PULL_PULL_SHA
        value: $(params.PULL_PULL_SHA)
      - name: PULL_REFS
        value: $(params.PULL_REFS)
      - name: REPO_NAME
        value: $(params.REPO_NAME)
      - name: REPO_OWNER
        value: $(params.REPO_OWNER)
      - name: REPO_URL
        value: $(params.REPO_URL)
      resources: {}
      taskSpec:
        params:
        - description: git url to clone
          name: REPO_URL
          type: string
        - default: master
          description: git revision to checkout (branch, tag, sha, ref…)
          name: PULL_PULL_SHA
          type: string
        - default: source
          description: subdirectory inside of /workspace to clone the git repo
          name: subdirectory
          type: string
        - description: the unique build number
          name: BUILD_ID
          type: string
        - description: the name of the job which is the trigger context name
          name: JOB_NAME
          type: string
        - description: the specification of the job
          name: JOB_SPEC
          type: string
        - description: 'the kind of job: postsubmit or presubmit'
          name: JOB_TYPE
          type: string
        - default: master
          description: the base git reference of the pull request
          name: PULL_BASE_REF
          type: string
        - description: the git sha of the base of the pull request
          name: PULL_BASE_SHA
          type: string
        - default: ""
          description: git pull request number
          name: PULL_NUMBER
          type: string
        - default: ""
          description: git pull request ref in the form 'refs/pull/$PULL_NUMBER/head'
          name: PULL_PULL_REF
          type: string
        - description: git pull reference strings of base and latest in the form 'master:$PULL_BASE_SHA,$PULL_NUMBER:$PULL_PULL_SHA:refs/pull/$PULL_NUMBER/head'
          name: PULL_REFS
          type: string
        - description: git repository name
          name: REPO_NAME
          type: string
        - description: git repository owner (user or organisation)
          name: REPO_OWNER
          type: string
        stepTemplate:
          env:
          - name: BUILD_ID
            value: $(params.BUILD_ID)
          - name: JOB_NAME
            value: $(params.JOB_NAME)
          - name: JOB_SPEC
            value: $(params.JOB_SPEC)
          - name: JOB_TYPE
            value: $(params.JOB_TYPE)
          - name: PULL_BASE_REF
            value: $(params.PULL_BASE_REF)
          - name: PULL_BASE_SHA
            value: $(params.PULL_BASE_SHA)
          - name: PULL_NUMBER
            value: $(params.PULL_NUMBER)
          - name: PULL_PULL_REF
            value: $(params.PULL_PULL_REF)
          - name: PULL_PULL_SHA
            value: $(params.PULL_PULL_SHA)
          - name: PULL_REFS
            value: $(params.PULL_REFS)
          - name: REPO_NAME
            value: $(params.REPO_NAME)
          - name: REPO_OWNER
            value: $(params.REPO_OWNER)
          - name: REPO_URL
            value: $(params.REPO_URL)
          name: ""
          resources: {}
          volumeMounts:
          - mountPath: /etc/podinfo
            name: podinfo
            readOnly: true
          workingDir: /workspace/source
        steps:
        - args:
          - -c
          - 'mkdir -p $HOME; git config --global --add user.name ${GIT_AUTHOR_NAME:-jenkins-x-bot};
            git config --global --add user.email ${GIT_AUTHOR_EMAIL:-jenkins-x@googlegroups.com};
            git config --global credential.helper store; git clone $(params.REPO_URL)
            /workspace/$(params.subdirectory); echo cloned url: $(params.REPO_URL)
            to dir: /workspace/$(params.subdirectory); cd /workspace/$(params.subdirectory);
            git checkout $(params.PULL_PULL_SHA); echo checked out revision: $(params.PULL_PULL_SHA)
            to dir: /workspace/$(params.subdirectory); ls -al'
          command:
          - /bin/sh
          image: gcr.io/jenkinsxio/builder-jx:2.1.32-662
          name: git-clone
          resources: {}
          workingDir: /workspace
        - args:
          - gitops
          - git
          - setup
          - --namespace
          - jx-git-operator
          command:
          - jx
          image: gcr.io/jenkinsxio/jx-cli:latest
          name: git-setup
          resources: {}
          workingDir: /workspace
        - args:
          - step
          - git
          - merge
          - --verbose
          - --baseSHA
          - $(params.PULL_BASE_SHA)
          - --sha
          - $(params.PULL_PULL_SHA)
          - --baseBranch
          - $(params.PULL_BASE_REF)
          command:
          - jx
          image: gcr.io/jenkinsxio/builder-jx:2.1.142-761
          name: git-merge
          resources: {}
        - args:
          - -c
          - jx step next-version --use-git-tag-only
          command:
          - /bin/sh
          image: gcr.io/jenkinsxio/builder-go
          name: next-version
          resources: {}
        - args:
          - -c
          - jx step tag --version $(cat VERSION) --no-apply
          command:
          - /bin/sh
          image: gcr.io/jenkinsxio/builder-go
          name: update-version
          resources: {}
        - args:
          - -c
          - echo disabled
          command:
          - /bin/sh
          image: gcr.io/jenkinsxio-labs-private/jxl:0.0.136
          name: helm-template
          resources: {}
        - args:
          - -c
          - jx step tag --version $(cat VERSION)
          command:
          - /bin/sh
          image: gcr.io/jenkinsxio/builder-go
          name: tag-version
          resources: {}
        - args:
          - '[ -d /builder/home ] || mkdir -p /builder && ln -s /tekton/home /builder/home'
          command:
          - /bin/sh
          - -c
          image: gcr.io/jenkinsxio/builder-jx:2.1.142-761
          name: setup-builder-home
          resources: {}
        - args:
          - gitops
          - variables
          command:
          - jx
          image: gcr.io/jenkinsxio/jx-cli:latest
          name: jx-variables
          resources: {}
        - args:
          - source .jx/variables.sh && make release
          command:
          - /bin/bash
          - -c
          image: golang:1.15
          name: release-binary
          resources: {}
        - args:
          - source .jx/variables.sh && cp /tekton/creds-secrets/tekton-container-registry-auth/.dockerconfigjson
            /kaniko/.docker/config.json && /kaniko/executor --cache=true --cache-dir=/workspace
            --context=/workspace/source --dockerfile=/workspace/source/Dockerfile
            --destination=gcr.io/$DOCKER_REGISTRY_ORG/$REPO_NAME:$VERSION --cache-repo=gcr.io/jx-labs-infra/cache
          command:
          - /busybox/sh
          - -c
          image: gcr.io/kaniko-project/executor:debug-9912ccbf8d22bbafbf971124600fbb0b13b9cbd6
          name: build-and-push-image
          resources: {}
        - args:
          - 'if [ -d "/workspace/source/charts/$REPO_NAME" ]; then cd /workspace/source/charts/$REPO_NAME
            && helm-docs; else echo no charts; fi'
          command:
          - /bin/ash
          - -c
          image: jnorwood/helm-docs:latest
          name: chart-docs
          resources: {}
        - args:
          - 'if [ -d "/workspace/source/charts/$REPO_NAME" ]; then source .jx/variables.sh
            && cd /workspace/source/charts/$REPO_NAME && make release; else echo no
            charts; fi'
          command:
          - /bin/bash
          - -c
          image: gcr.io/jenkinsxio/jx-cli:latest
          name: release-chart
          resources: {}
        - args:
          - source .jx/variables.sh && jx step changelog --verbose --header-file=hack/changelog-header.md
            --version=$VERSION --rev=$PULL_BASE_SHA --output-markdown=changelog.md
            --update-release=false
          command:
          - /bin/bash
          - -c
          image: gcr.io/jenkinsxio/builder-go:2.1.142-761
          name: changelog
          resources: {}
        - args:
          - source .jx/variables.sh && make goreleaser
          command:
          - /bin/bash
          - -c
          image: gcr.io/jenkinsxio/step-go-releaser:0.0.14
          name: upload-binaries
          resources: {}
        - args:
          - source .jx/variables.sh && ./promote.sh
          command:
          - /bin/bash
          - -c
          image: gcr.io/jenkinsxio/builder-go:2.1.142-761
          name: promote-release
          resources: {}
        volumes:
        - downwardAPI:
            items:
            - fieldRef:
                fieldPath: metadata.labels
              path: labels
          name: podinfo
  podTemplate:
    ImagePullSecrets: null
    hostNetwork: false
    schedulerName: ""
  serviceAccountName: tekton-bot
  timeout: 240h0m0s
